

Terminals which are not used:

   FLOAT
   STRING
   ID
   PLUS
   MINUS
   AND
   OR



Grammar
rule 1    program -> expList
rule 2    expList -> exp expList
rule 3    expList -> exp
rule 4    exp -> labelExp
rule 5    exp -> jumpExp
rule 6    exp -> cjumpExp
rule 7    exp -> loadExp
rule 8    exp -> storeExp
rule 9    exp -> binopExp
rule 10   exp -> movExp
rule 11   labelExp -> LABEL COLON
rule 12   jumpExp -> JUMP LABEL
rule 13   jumpExp -> JUMP REGISTER
rule 14   jumpExp -> JUMP_AND_LINK LABEL
rule 15   cjumpExp -> BEQ var COMMA var COMMA LABEL
rule 16   cjumpExp -> BNE var COMMA var COMMA LABEL
rule 17   cjumpExp -> BGT TEMP COMMA TEMP COMMA LABEL
rule 18   cjumpExp -> BGT REGISTER COMMA INT COMMA LABEL
rule 19   cjumpExp -> BGE TEMP COMMA TEMP COMMA LABEL
rule 20   cjumpExp -> BLT TEMP COMMA TEMP COMMA LABEL
rule 21   cjumpExp -> BLE TEMP COMMA TEMP COMMA LABEL
rule 22   loadExp -> LOAD var COMMA INT LPAREN var RPAREN
rule 23   loadExp -> LOAD_IMMEDIATE TEMP COMMA INT
rule 24   loadExp -> LOAD_IMMEDIATE REGISTER COMMA INT
rule 25   storeExp -> STORE var COMMA INT LPAREN var RPAREN
rule 26   binopExp -> ADD var COMMA var COMMA var
rule 27   binopExp -> SUB var COMMA var COMMA TEMP
rule 28   binopExp -> MUL TEMP COMMA TEMP COMMA TEMP
rule 29   binopExp -> ADD_IMMEDIATE REGISTER COMMA REGISTER COMMA INT
rule 30   binopExp -> ADD_IMMEDIATE REGISTER COMMA TEMP COMMA INT
rule 31   binopExp -> ADD_IMMEDIATE TEMP COMMA REGISTER COMMA INT
rule 32   binopExp -> ADD_IMMEDIATE TEMP COMMA TEMP COMMA INT
rule 33   movExp -> MOVE TEMP COMMA TEMP
rule 34   movExp -> MOVE REGISTER COMMA REGISTER
rule 35   var -> TEMP
rule 36   var -> REGISTER

Terminals, with rules where they appear

$ (-1)
error (256)
INT (258) 18 22 23 24 25 29 30 31 32
FLOAT (259)
STRING (260)
ID (261)
LABEL (262) 11 12 14 15 16 17 18 19 20 21
COMMA (263) 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33
    34
COLON (264) 11
LOAD (265) 22
STORE (266) 25
LOAD_IMMEDIATE (267) 23 24
ADD_IMMEDIATE (268) 29 30 31 32
JUMP (269) 12 13
JUMP_AND_LINK (270) 14
LPAREN (271) 22 25
RPAREN (272) 22 25
PLUS (273)
MINUS (274)
ADD (275) 26
SUB (276) 27
MUL (277) 28
TEMP (278) 17 19 20 21 23 27 28 30 31 32 33 35
BEQ (279) 15
BNE (280) 16
BLT (281) 20
BLE (282) 21
BGT (283) 17 18
BGE (284) 19
REGISTER (285) 13 18 24 29 30 31 34 36
AND (286)
OR (287)
MOVE (288) 33 34

Nonterminals, with rules where they appear

program (34)
    on left: 1
expList (35)
    on left: 2 3, on right: 1 2
exp (36)
    on left: 4 5 6 7 8 9 10, on right: 2 3
labelExp (37)
    on left: 11, on right: 4
jumpExp (38)
    on left: 12 13 14, on right: 5
cjumpExp (39)
    on left: 15 16 17 18 19 20 21, on right: 6
loadExp (40)
    on left: 22 23 24, on right: 7
storeExp (41)
    on left: 25, on right: 8
binopExp (42)
    on left: 26 27 28 29 30 31 32, on right: 9
movExp (43)
    on left: 33 34, on right: 10
var (44)
    on left: 35 36, on right: 15 16 22 25 26 27


state 0

    LABEL	shift, and go to state 1
    LOAD	shift, and go to state 2
    STORE	shift, and go to state 3
    LOAD_IMMEDIATE	shift, and go to state 4
    ADD_IMMEDIATE	shift, and go to state 5
    JUMP	shift, and go to state 6
    JUMP_AND_LINK	shift, and go to state 7
    ADD 	shift, and go to state 8
    SUB 	shift, and go to state 9
    MUL 	shift, and go to state 10
    BEQ 	shift, and go to state 11
    BNE 	shift, and go to state 12
    BLT 	shift, and go to state 13
    BLE 	shift, and go to state 14
    BGT 	shift, and go to state 15
    BGE 	shift, and go to state 16
    MOVE	shift, and go to state 17

    program	go to state 124
    expList	go to state 18
    exp 	go to state 19
    labelExp	go to state 20
    jumpExp	go to state 21
    cjumpExp	go to state 22
    loadExp	go to state 23
    storeExp	go to state 24
    binopExp	go to state 25
    movExp	go to state 26



state 1

    labelExp  ->  LABEL . COLON   (rule 11)

    COLON	shift, and go to state 27



state 2

    loadExp  ->  LOAD . var COMMA INT LPAREN var RPAREN   (rule 22)

    TEMP	shift, and go to state 28
    REGISTER	shift, and go to state 29

    var 	go to state 30



state 3

    storeExp  ->  STORE . var COMMA INT LPAREN var RPAREN   (rule 25)

    TEMP	shift, and go to state 28
    REGISTER	shift, and go to state 29

    var 	go to state 31



state 4

    loadExp  ->  LOAD_IMMEDIATE . TEMP COMMA INT   (rule 23)
    loadExp  ->  LOAD_IMMEDIATE . REGISTER COMMA INT   (rule 24)

    TEMP	shift, and go to state 32
    REGISTER	shift, and go to state 33



state 5

    binopExp  ->  ADD_IMMEDIATE . REGISTER COMMA REGISTER COMMA INT   (rule 29)
    binopExp  ->  ADD_IMMEDIATE . REGISTER COMMA TEMP COMMA INT   (rule 30)
    binopExp  ->  ADD_IMMEDIATE . TEMP COMMA REGISTER COMMA INT   (rule 31)
    binopExp  ->  ADD_IMMEDIATE . TEMP COMMA TEMP COMMA INT   (rule 32)

    TEMP	shift, and go to state 34
    REGISTER	shift, and go to state 35



state 6

    jumpExp  ->  JUMP . LABEL   (rule 12)
    jumpExp  ->  JUMP . REGISTER   (rule 13)

    LABEL	shift, and go to state 36
    REGISTER	shift, and go to state 37



state 7

    jumpExp  ->  JUMP_AND_LINK . LABEL   (rule 14)

    LABEL	shift, and go to state 38



state 8

    binopExp  ->  ADD . var COMMA var COMMA var   (rule 26)

    TEMP	shift, and go to state 28
    REGISTER	shift, and go to state 29

    var 	go to state 39



state 9

    binopExp  ->  SUB . var COMMA var COMMA TEMP   (rule 27)

    TEMP	shift, and go to state 28
    REGISTER	shift, and go to state 29

    var 	go to state 40



state 10

    binopExp  ->  MUL . TEMP COMMA TEMP COMMA TEMP   (rule 28)

    TEMP	shift, and go to state 41



state 11

    cjumpExp  ->  BEQ . var COMMA var COMMA LABEL   (rule 15)

    TEMP	shift, and go to state 28
    REGISTER	shift, and go to state 29

    var 	go to state 42



state 12

    cjumpExp  ->  BNE . var COMMA var COMMA LABEL   (rule 16)

    TEMP	shift, and go to state 28
    REGISTER	shift, and go to state 29

    var 	go to state 43



state 13

    cjumpExp  ->  BLT . TEMP COMMA TEMP COMMA LABEL   (rule 20)

    TEMP	shift, and go to state 44



state 14

    cjumpExp  ->  BLE . TEMP COMMA TEMP COMMA LABEL   (rule 21)

    TEMP	shift, and go to state 45



state 15

    cjumpExp  ->  BGT . TEMP COMMA TEMP COMMA LABEL   (rule 17)
    cjumpExp  ->  BGT . REGISTER COMMA INT COMMA LABEL   (rule 18)

    TEMP	shift, and go to state 46
    REGISTER	shift, and go to state 47



state 16

    cjumpExp  ->  BGE . TEMP COMMA TEMP COMMA LABEL   (rule 19)

    TEMP	shift, and go to state 48



state 17

    movExp  ->  MOVE . TEMP COMMA TEMP   (rule 33)
    movExp  ->  MOVE . REGISTER COMMA REGISTER   (rule 34)

    TEMP	shift, and go to state 49
    REGISTER	shift, and go to state 50



state 18

    program  ->  expList .   (rule 1)

    $default	reduce using rule 1 (program)



state 19

    expList  ->  exp . expList   (rule 2)
    expList  ->  exp .   (rule 3)

    LABEL	shift, and go to state 1
    LOAD	shift, and go to state 2
    STORE	shift, and go to state 3
    LOAD_IMMEDIATE	shift, and go to state 4
    ADD_IMMEDIATE	shift, and go to state 5
    JUMP	shift, and go to state 6
    JUMP_AND_LINK	shift, and go to state 7
    ADD 	shift, and go to state 8
    SUB 	shift, and go to state 9
    MUL 	shift, and go to state 10
    BEQ 	shift, and go to state 11
    BNE 	shift, and go to state 12
    BLT 	shift, and go to state 13
    BLE 	shift, and go to state 14
    BGT 	shift, and go to state 15
    BGE 	shift, and go to state 16
    MOVE	shift, and go to state 17

    $default	reduce using rule 3 (expList)

    expList	go to state 51
    exp 	go to state 19
    labelExp	go to state 20
    jumpExp	go to state 21
    cjumpExp	go to state 22
    loadExp	go to state 23
    storeExp	go to state 24
    binopExp	go to state 25
    movExp	go to state 26



state 20

    exp  ->  labelExp .   (rule 4)

    $default	reduce using rule 4 (exp)



state 21

    exp  ->  jumpExp .   (rule 5)

    $default	reduce using rule 5 (exp)



state 22

    exp  ->  cjumpExp .   (rule 6)

    $default	reduce using rule 6 (exp)



state 23

    exp  ->  loadExp .   (rule 7)

    $default	reduce using rule 7 (exp)



state 24

    exp  ->  storeExp .   (rule 8)

    $default	reduce using rule 8 (exp)



state 25

    exp  ->  binopExp .   (rule 9)

    $default	reduce using rule 9 (exp)



state 26

    exp  ->  movExp .   (rule 10)

    $default	reduce using rule 10 (exp)



state 27

    labelExp  ->  LABEL COLON .   (rule 11)

    $default	reduce using rule 11 (labelExp)



state 28

    var  ->  TEMP .   (rule 35)

    $default	reduce using rule 35 (var)



state 29

    var  ->  REGISTER .   (rule 36)

    $default	reduce using rule 36 (var)



state 30

    loadExp  ->  LOAD var . COMMA INT LPAREN var RPAREN   (rule 22)

    COMMA	shift, and go to state 52



state 31

    storeExp  ->  STORE var . COMMA INT LPAREN var RPAREN   (rule 25)

    COMMA	shift, and go to state 53



state 32

    loadExp  ->  LOAD_IMMEDIATE TEMP . COMMA INT   (rule 23)

    COMMA	shift, and go to state 54



state 33

    loadExp  ->  LOAD_IMMEDIATE REGISTER . COMMA INT   (rule 24)

    COMMA	shift, and go to state 55



state 34

    binopExp  ->  ADD_IMMEDIATE TEMP . COMMA REGISTER COMMA INT   (rule 31)
    binopExp  ->  ADD_IMMEDIATE TEMP . COMMA TEMP COMMA INT   (rule 32)

    COMMA	shift, and go to state 56



state 35

    binopExp  ->  ADD_IMMEDIATE REGISTER . COMMA REGISTER COMMA INT   (rule 29)
    binopExp  ->  ADD_IMMEDIATE REGISTER . COMMA TEMP COMMA INT   (rule 30)

    COMMA	shift, and go to state 57



state 36

    jumpExp  ->  JUMP LABEL .   (rule 12)

    $default	reduce using rule 12 (jumpExp)



state 37

    jumpExp  ->  JUMP REGISTER .   (rule 13)

    $default	reduce using rule 13 (jumpExp)



state 38

    jumpExp  ->  JUMP_AND_LINK LABEL .   (rule 14)

    $default	reduce using rule 14 (jumpExp)



state 39

    binopExp  ->  ADD var . COMMA var COMMA var   (rule 26)

    COMMA	shift, and go to state 58



state 40

    binopExp  ->  SUB var . COMMA var COMMA TEMP   (rule 27)

    COMMA	shift, and go to state 59



state 41

    binopExp  ->  MUL TEMP . COMMA TEMP COMMA TEMP   (rule 28)

    COMMA	shift, and go to state 60



state 42

    cjumpExp  ->  BEQ var . COMMA var COMMA LABEL   (rule 15)

    COMMA	shift, and go to state 61



state 43

    cjumpExp  ->  BNE var . COMMA var COMMA LABEL   (rule 16)

    COMMA	shift, and go to state 62



state 44

    cjumpExp  ->  BLT TEMP . COMMA TEMP COMMA LABEL   (rule 20)

    COMMA	shift, and go to state 63



state 45

    cjumpExp  ->  BLE TEMP . COMMA TEMP COMMA LABEL   (rule 21)

    COMMA	shift, and go to state 64



state 46

    cjumpExp  ->  BGT TEMP . COMMA TEMP COMMA LABEL   (rule 17)

    COMMA	shift, and go to state 65



state 47

    cjumpExp  ->  BGT REGISTER . COMMA INT COMMA LABEL   (rule 18)

    COMMA	shift, and go to state 66



state 48

    cjumpExp  ->  BGE TEMP . COMMA TEMP COMMA LABEL   (rule 19)

    COMMA	shift, and go to state 67



state 49

    movExp  ->  MOVE TEMP . COMMA TEMP   (rule 33)

    COMMA	shift, and go to state 68



state 50

    movExp  ->  MOVE REGISTER . COMMA REGISTER   (rule 34)

    COMMA	shift, and go to state 69



state 51

    expList  ->  exp expList .   (rule 2)

    $default	reduce using rule 2 (expList)



state 52

    loadExp  ->  LOAD var COMMA . INT LPAREN var RPAREN   (rule 22)

    INT 	shift, and go to state 70



state 53

    storeExp  ->  STORE var COMMA . INT LPAREN var RPAREN   (rule 25)

    INT 	shift, and go to state 71



state 54

    loadExp  ->  LOAD_IMMEDIATE TEMP COMMA . INT   (rule 23)

    INT 	shift, and go to state 72



state 55

    loadExp  ->  LOAD_IMMEDIATE REGISTER COMMA . INT   (rule 24)

    INT 	shift, and go to state 73



state 56

    binopExp  ->  ADD_IMMEDIATE TEMP COMMA . REGISTER COMMA INT   (rule 31)
    binopExp  ->  ADD_IMMEDIATE TEMP COMMA . TEMP COMMA INT   (rule 32)

    TEMP	shift, and go to state 74
    REGISTER	shift, and go to state 75



state 57

    binopExp  ->  ADD_IMMEDIATE REGISTER COMMA . REGISTER COMMA INT   (rule 29)
    binopExp  ->  ADD_IMMEDIATE REGISTER COMMA . TEMP COMMA INT   (rule 30)

    TEMP	shift, and go to state 76
    REGISTER	shift, and go to state 77



state 58

    binopExp  ->  ADD var COMMA . var COMMA var   (rule 26)

    TEMP	shift, and go to state 28
    REGISTER	shift, and go to state 29

    var 	go to state 78



state 59

    binopExp  ->  SUB var COMMA . var COMMA TEMP   (rule 27)

    TEMP	shift, and go to state 28
    REGISTER	shift, and go to state 29

    var 	go to state 79



state 60

    binopExp  ->  MUL TEMP COMMA . TEMP COMMA TEMP   (rule 28)

    TEMP	shift, and go to state 80



state 61

    cjumpExp  ->  BEQ var COMMA . var COMMA LABEL   (rule 15)

    TEMP	shift, and go to state 28
    REGISTER	shift, and go to state 29

    var 	go to state 81



state 62

    cjumpExp  ->  BNE var COMMA . var COMMA LABEL   (rule 16)

    TEMP	shift, and go to state 28
    REGISTER	shift, and go to state 29

    var 	go to state 82



state 63

    cjumpExp  ->  BLT TEMP COMMA . TEMP COMMA LABEL   (rule 20)

    TEMP	shift, and go to state 83



state 64

    cjumpExp  ->  BLE TEMP COMMA . TEMP COMMA LABEL   (rule 21)

    TEMP	shift, and go to state 84



state 65

    cjumpExp  ->  BGT TEMP COMMA . TEMP COMMA LABEL   (rule 17)

    TEMP	shift, and go to state 85



state 66

    cjumpExp  ->  BGT REGISTER COMMA . INT COMMA LABEL   (rule 18)

    INT 	shift, and go to state 86



state 67

    cjumpExp  ->  BGE TEMP COMMA . TEMP COMMA LABEL   (rule 19)

    TEMP	shift, and go to state 87



state 68

    movExp  ->  MOVE TEMP COMMA . TEMP   (rule 33)

    TEMP	shift, and go to state 88



state 69

    movExp  ->  MOVE REGISTER COMMA . REGISTER   (rule 34)

    REGISTER	shift, and go to state 89



state 70

    loadExp  ->  LOAD var COMMA INT . LPAREN var RPAREN   (rule 22)

    LPAREN	shift, and go to state 90



state 71

    storeExp  ->  STORE var COMMA INT . LPAREN var RPAREN   (rule 25)

    LPAREN	shift, and go to state 91



state 72

    loadExp  ->  LOAD_IMMEDIATE TEMP COMMA INT .   (rule 23)

    $default	reduce using rule 23 (loadExp)



state 73

    loadExp  ->  LOAD_IMMEDIATE REGISTER COMMA INT .   (rule 24)

    $default	reduce using rule 24 (loadExp)



state 74

    binopExp  ->  ADD_IMMEDIATE TEMP COMMA TEMP . COMMA INT   (rule 32)

    COMMA	shift, and go to state 92



state 75

    binopExp  ->  ADD_IMMEDIATE TEMP COMMA REGISTER . COMMA INT   (rule 31)

    COMMA	shift, and go to state 93



state 76

    binopExp  ->  ADD_IMMEDIATE REGISTER COMMA TEMP . COMMA INT   (rule 30)

    COMMA	shift, and go to state 94



state 77

    binopExp  ->  ADD_IMMEDIATE REGISTER COMMA REGISTER . COMMA INT   (rule 29)

    COMMA	shift, and go to state 95



state 78

    binopExp  ->  ADD var COMMA var . COMMA var   (rule 26)

    COMMA	shift, and go to state 96



state 79

    binopExp  ->  SUB var COMMA var . COMMA TEMP   (rule 27)

    COMMA	shift, and go to state 97



state 80

    binopExp  ->  MUL TEMP COMMA TEMP . COMMA TEMP   (rule 28)

    COMMA	shift, and go to state 98



state 81

    cjumpExp  ->  BEQ var COMMA var . COMMA LABEL   (rule 15)

    COMMA	shift, and go to state 99



state 82

    cjumpExp  ->  BNE var COMMA var . COMMA LABEL   (rule 16)

    COMMA	shift, and go to state 100



state 83

    cjumpExp  ->  BLT TEMP COMMA TEMP . COMMA LABEL   (rule 20)

    COMMA	shift, and go to state 101



state 84

    cjumpExp  ->  BLE TEMP COMMA TEMP . COMMA LABEL   (rule 21)

    COMMA	shift, and go to state 102



state 85

    cjumpExp  ->  BGT TEMP COMMA TEMP . COMMA LABEL   (rule 17)

    COMMA	shift, and go to state 103



state 86

    cjumpExp  ->  BGT REGISTER COMMA INT . COMMA LABEL   (rule 18)

    COMMA	shift, and go to state 104



state 87

    cjumpExp  ->  BGE TEMP COMMA TEMP . COMMA LABEL   (rule 19)

    COMMA	shift, and go to state 105



state 88

    movExp  ->  MOVE TEMP COMMA TEMP .   (rule 33)

    $default	reduce using rule 33 (movExp)



state 89

    movExp  ->  MOVE REGISTER COMMA REGISTER .   (rule 34)

    $default	reduce using rule 34 (movExp)



state 90

    loadExp  ->  LOAD var COMMA INT LPAREN . var RPAREN   (rule 22)

    TEMP	shift, and go to state 28
    REGISTER	shift, and go to state 29

    var 	go to state 106



state 91

    storeExp  ->  STORE var COMMA INT LPAREN . var RPAREN   (rule 25)

    TEMP	shift, and go to state 28
    REGISTER	shift, and go to state 29

    var 	go to state 107



state 92

    binopExp  ->  ADD_IMMEDIATE TEMP COMMA TEMP COMMA . INT   (rule 32)

    INT 	shift, and go to state 108



state 93

    binopExp  ->  ADD_IMMEDIATE TEMP COMMA REGISTER COMMA . INT   (rule 31)

    INT 	shift, and go to state 109



state 94

    binopExp  ->  ADD_IMMEDIATE REGISTER COMMA TEMP COMMA . INT   (rule 30)

    INT 	shift, and go to state 110



state 95

    binopExp  ->  ADD_IMMEDIATE REGISTER COMMA REGISTER COMMA . INT   (rule 29)

    INT 	shift, and go to state 111



state 96

    binopExp  ->  ADD var COMMA var COMMA . var   (rule 26)

    TEMP	shift, and go to state 28
    REGISTER	shift, and go to state 29

    var 	go to state 112



state 97

    binopExp  ->  SUB var COMMA var COMMA . TEMP   (rule 27)

    TEMP	shift, and go to state 113



state 98

    binopExp  ->  MUL TEMP COMMA TEMP COMMA . TEMP   (rule 28)

    TEMP	shift, and go to state 114



state 99

    cjumpExp  ->  BEQ var COMMA var COMMA . LABEL   (rule 15)

    LABEL	shift, and go to state 115



state 100

    cjumpExp  ->  BNE var COMMA var COMMA . LABEL   (rule 16)

    LABEL	shift, and go to state 116



state 101

    cjumpExp  ->  BLT TEMP COMMA TEMP COMMA . LABEL   (rule 20)

    LABEL	shift, and go to state 117



state 102

    cjumpExp  ->  BLE TEMP COMMA TEMP COMMA . LABEL   (rule 21)

    LABEL	shift, and go to state 118



state 103

    cjumpExp  ->  BGT TEMP COMMA TEMP COMMA . LABEL   (rule 17)

    LABEL	shift, and go to state 119



state 104

    cjumpExp  ->  BGT REGISTER COMMA INT COMMA . LABEL   (rule 18)

    LABEL	shift, and go to state 120



state 105

    cjumpExp  ->  BGE TEMP COMMA TEMP COMMA . LABEL   (rule 19)

    LABEL	shift, and go to state 121



state 106

    loadExp  ->  LOAD var COMMA INT LPAREN var . RPAREN   (rule 22)

    RPAREN	shift, and go to state 122



state 107

    storeExp  ->  STORE var COMMA INT LPAREN var . RPAREN   (rule 25)

    RPAREN	shift, and go to state 123



state 108

    binopExp  ->  ADD_IMMEDIATE TEMP COMMA TEMP COMMA INT .   (rule 32)

    $default	reduce using rule 32 (binopExp)



state 109

    binopExp  ->  ADD_IMMEDIATE TEMP COMMA REGISTER COMMA INT .   (rule 31)

    $default	reduce using rule 31 (binopExp)



state 110

    binopExp  ->  ADD_IMMEDIATE REGISTER COMMA TEMP COMMA INT .   (rule 30)

    $default	reduce using rule 30 (binopExp)



state 111

    binopExp  ->  ADD_IMMEDIATE REGISTER COMMA REGISTER COMMA INT .   (rule 29)

    $default	reduce using rule 29 (binopExp)



state 112

    binopExp  ->  ADD var COMMA var COMMA var .   (rule 26)

    $default	reduce using rule 26 (binopExp)



state 113

    binopExp  ->  SUB var COMMA var COMMA TEMP .   (rule 27)

    $default	reduce using rule 27 (binopExp)



state 114

    binopExp  ->  MUL TEMP COMMA TEMP COMMA TEMP .   (rule 28)

    $default	reduce using rule 28 (binopExp)



state 115

    cjumpExp  ->  BEQ var COMMA var COMMA LABEL .   (rule 15)

    $default	reduce using rule 15 (cjumpExp)



state 116

    cjumpExp  ->  BNE var COMMA var COMMA LABEL .   (rule 16)

    $default	reduce using rule 16 (cjumpExp)



state 117

    cjumpExp  ->  BLT TEMP COMMA TEMP COMMA LABEL .   (rule 20)

    $default	reduce using rule 20 (cjumpExp)



state 118

    cjumpExp  ->  BLE TEMP COMMA TEMP COMMA LABEL .   (rule 21)

    $default	reduce using rule 21 (cjumpExp)



state 119

    cjumpExp  ->  BGT TEMP COMMA TEMP COMMA LABEL .   (rule 17)

    $default	reduce using rule 17 (cjumpExp)



state 120

    cjumpExp  ->  BGT REGISTER COMMA INT COMMA LABEL .   (rule 18)

    $default	reduce using rule 18 (cjumpExp)



state 121

    cjumpExp  ->  BGE TEMP COMMA TEMP COMMA LABEL .   (rule 19)

    $default	reduce using rule 19 (cjumpExp)



state 122

    loadExp  ->  LOAD var COMMA INT LPAREN var RPAREN .   (rule 22)

    $default	reduce using rule 22 (loadExp)



state 123

    storeExp  ->  STORE var COMMA INT LPAREN var RPAREN .   (rule 25)

    $default	reduce using rule 25 (storeExp)



state 124

    $   	go to state 125



state 125

    $   	go to state 126



state 126

    $default	accept
